---
import Layout from "@layouts/Layout.astro";
import Container from "@components/Container.astro";
import { HOME, GLOBAL, type CollectionName } from "@consts";
import BlogCardButton from "@components/BlogCardButton.astro";
import AreasOfInvestmentsCardButton from "@components/AreasOfInvestmentsCardButton.astro";
import TextLink from "@components/TextLink.astro";
import type { CollectionEntry } from "astro:content";
import { getFilteredCollectionEntries, resolvePath } from "@lib/utils";
import Bio from "../components/Bio.astro";

async function getCollectionEntries<T extends CollectionName>(
  collectionName: T,
  maxItems: number,
): Promise<CollectionEntry<T>[]> {
  const { entries } = await getFilteredCollectionEntries(collectionName);

  return entries.slice(0, maxItems);
}

const blog = await getCollectionEntries("blog", HOME.blogEntries ?? 0);

const areasOfInvestments = await getCollectionEntries(
  "areasOfInvestments",
  HOME.areasOfInvestmentsEntries ?? 0,
);
---

<Layout>
  <Container>
    <aside data-pagefind-ignore>
      
      {/* Circular author profile image
      <div class="animate mb-8 flex items-center justify-center">
        <img
          src={resolvePath(GLOBAL.authorPhotoSrc, Astro.url.pathname)}
          alt={GLOBAL.author}
          class="h-48 w-48 rounded-full"
        />
      </div>
      */}
      <div class="space-y-16">
        <section>
          <article class="animate space-y-4">
            <Bio />
          </article>
        </section>

        {
          areasOfInvestments.length > 0 && (
            <section class="animate space-y-6">
              <div class="flex flex-wrap items-center justify-between gap-y-2">
                <h2 class="font-semibold text-black dark:text-white">
                  Areas of investments
                </h2>
                <TextLink href="areasOfInvestments">
                  all areas of investments{" "}
                </TextLink>
              </div>
              <ul class="not-prose flex flex-col gap-4">
                {areasOfInvestments.map((area) => (
                  <li>
                    <AreasOfInvestmentsCardButton entry={area} />
                  </li>
                ))}
              </ul>
            </section>
          )
        }

        {
          blog.length > 0 && (
            <section class="animate space-y-6">
              <div class="flex flex-wrap items-center justify-between gap-y-2">
                <h2 class="font-semibold text-black dark:text-white">
                  Recent posts
                </h2>
                <TextLink href="blog">all posts </TextLink>
              </div>
              <ul class="not-prose flex flex-col gap-4">
                {blog.map((post) => (
                  <li>
                    <BlogCardButton entry={post} />
                  </li>
                ))}
              </ul>
            </section>
          )
        }
      </div>
    </aside>
  </Container>
</Layout>
